@page "/main-page"
@using Frontend.Client.Components
@using Frontend.Client.Models
@using static Frontend.Client.Models.WebSocketService
@inject NavigationManager NavigationManager
@inject WebSocketService WebSocketService

<PageTitle>Main Page</PageTitle>

<div class="main-page">
    <div class="main-block">
        <div class="main-top">
            <h1>Chat Room</h1>
            <button>SETTINGS</button>
        </div>
        <div class="main-content">
            <div class="message-container" id="messageContainer">
                @foreach (var message in messages)
                {
                    <MessageComponent User="@message.User" MessageContent="@message.Content" Timestamp="@message.Timestamp" />
                }
            </div>
        </div>
        <div class="chat-input-box">
            <input type="text" placeholder="Type your message here" value="@newMessage" @oninput="e => newMessage = e.Value.ToString()" @onkeydown="HandleEnterKey" />
            <button class="sendMessageButton" @onclick="SendMessage">➤</button>
        </div>
    </div>
    <div class="user-block">
        <h1>CONNECTED USERS</h1>
        <ul class="user-list">
            <li>user1</li>
            <li>user2</li>
            <li>user3</li>
            <li>user4</li>
        </ul>
    </div>
</div>

@code {
    private string newMessage = string.Empty;
    private List<Message> messages = new List<Message>();

    protected override void OnInitialized()
    {
        if (!WebSocketService.IsAuthenticated)
        {
            NavigationManager.NavigateTo("/login");
        }

        WebSocketService.OnMessageReceived += MessageReceived;
    }

    public void MessageReceived(Message message)
    {
        messages.Add(message);
        InvokeAsync(StateHasChanged);
    }

    private async Task SendMessage()
    {
        if (!string.IsNullOrWhiteSpace(newMessage))
        {
            await WebSocketService.SendMessageAsync("DO SEND\r\nWITH\r\n" + newMessage);
            newMessage = string.Empty;
        }
    }

    private async void HandleEnterKey(KeyboardEventArgs e)
    {
        if (e.Key == "Enter")
        {
            await SendMessage();
        }
    }
}
