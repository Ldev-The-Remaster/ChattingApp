@page "/settings"
@using Models
@using LSMP
@inject NavigationManager NavigationManager

<PageTitle>Settings - Ban List</PageTitle>

<div class="settings-page-container">
    <button class="settings-back-button" @onclick="GoBack">BACK</button>
    <div class="settings-main-block">
        <div class="settings-main-top">
            <h1>Ban List</h1>
        </div>
        <div class="settings-main-content">

            <!-- Banned Usernames Table -->
            <table class="settings-ban-table">
                <thead>
                    <tr>
                        <th>Banned Usernames</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var userBan in ClientManager.userBans)
                    {
                        <tr @onclick="() => ShowUserBanDetails(userBan)">
                            <td>@userBan.Username</td>
                        </tr>
                    }
                </tbody>
            </table>

            <!-- Banned IP Addresses Table -->
            <table class="settings-ban-table">
                <thead>
                    <tr>
                        <th>Banned IP Addresses</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var ipBan in ClientManager.ipBans)
                    {
                        <tr @onclick="() => ShowIpBanDetails(ipBan)">
                            <td>@ipBan.IpAddress</td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>

@if (showUserPopup)
{
    <div class="ban-popup-overlay" @onclick="HandleOverlayClick">
        <div class="ban-popup-content" @onclick:stopPropagation="true">
            <h2>Ban Details</h2>
            <p><strong>Username:</strong> @selectedUserBan.Username</p>
            <p><strong>Reason:</strong> @selectedUserBan.Reason</p>
            <div class="ban-popup-buttons">
                <button class="ban-popup-button" @onclick="ClosePopup">Back</button>
                <button class="ban-popup-button unban" @onclick="() => UnbanUser(selectedUserBan)">Unban</button>
            </div>
        </div>
    </div>
}

@if (showIpPopup)
{
    <div class="ban-popup-overlay" @onclick="HandleOverlayClick">
        <div class="ban-popup-content" @onclick:stopPropagation="true">
            <h2>Ban Details</h2>
            <p><strong>IP Address:</strong> @selectedIpBan.IpAddress</p>
            <p><strong>Reason:</strong> @selectedIpBan.Reason</p>
            <div class="ban-popup-buttons">
                <button class="ban-popup-button" @onclick="ClosePopup">Back</button>
                <button class="ban-popup-button unban" @onclick="() => UnbanIp(selectedIpBan)">Unban</button>
            </div>
        </div>
    </div>
}



@code {

    private UserBan selectedUserBan;
    private IpBan selectedIpBan;

    private bool showUserPopup = false;
    private bool showIpPopup = false;



    private void ShowUserBanDetails(UserBan ban)
    {
        selectedUserBan = ban;
        showUserPopup = true;
    }

    private void ShowIpBanDetails(IpBan ban)
	{
		selectedIpBan = ban;
		showIpPopup = true;
	}

    private void HandleOverlayClick()
    {
        ClosePopup();
    }

    private void ClosePopup()
    {
        showUserPopup = false;
        showIpPopup = false;
    }

    private void UnbanUser(UserBan userban)
    {
        _ = WebSocketService.SendMessageAsync(Messaging.UnbanMessage(userban.Username));
        ClientManager.userBans.Remove(userban);
        ClosePopup();
    }

    private void UnbanIp(IpBan ipban)
	{
        _ = WebSocketService.SendMessageAsync(Messaging.UnbanIpMessage(ipban.IpAddress));
		ClientManager.ipBans.Remove(ipban);
		ClosePopup();
	}

    private void GoBack()
    {
        NavigationManager.NavigateTo("/channel/" + ChannelManager.CurrentChannel);
    }


    public class UserBan
    {
        public string Username { get; set; }
        public string Reason { get; set; }
    }

    public class IpBan
    {
        public string IpAddress { get; set; }
        public string Reason { get; set; }
    }


 }